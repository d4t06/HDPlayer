import{formatTime,setLocalStorage}from"./utils/appHelper.js";import{cdImg,playBtn,timeSlider,timeSliderHolder,currentTimeEle,durationEle,volumeSlider,volumeSliderHolder,audio}from"./constant.js";import handleScrollActiveSongIntoView from"./scrollToActive.js";const $=document.querySelector.bind(document);let intervalId=null,setLocalStorageTimerId=0;export const handleOnPause=function(e){playBtn.classList.remove("playing"),e.isPlaying=!1,cdImg.style.animationPlayState="paused",clearInterval(setLocalStorageTimerId)};export const handleTimeUpdate=function(){const e=audio.currentTime,t=(e/audio.duration*100).toFixed(1);timeSlider.style.background=`linear-gradient(to right, #999 ${t}%, #e1e1e1 ${t}%, #e1e1e1 100%)`,timeSliderHolder.style.left=t+"%",currentTimeEle.innerText=formatTime(e)||"00:00"};export const updateVolume=e=>{audio.volume=e,volumeSliderHolder.style.left=100*e+"%",volumeSlider.style.background=`linear-gradient(to right, #999 ${100*e}%, #e1e1e1 ${100*e}%, #e1e1e1 100%)`};export default function handleAudioEvent(){const e=this,t=()=>{intervalId&&clearInterval(intervalId);let e,t,n=$(".title-wrapper h2"),i=$(".title-wrapper");if(!n||!i)return;const o=()=>{n.style.transition=`transform linear ${e}s`,n.style.transform=`translateX(-${t}px)`,setTimeout((()=>{(()=>{let e=$(".title-wrapper h2");console.log("unscroll text"),e.style.transition="unset",e.style.transform="translateX(0px)"})()}),1e3*e)};n.offsetWidth-i.offsetWidth>0&&(t=n.offsetWidth+20,e=+(t/35).toFixed(1),n.innerHTML=n.innerText+"&nbsp; &nbsp; &nbsp;"+n.innerText,o(),intervalId=setInterval((()=>{o()}),1e3*e+3e3+1e3))};audio.onplaying=function(){playBtn.classList.add("playing"),playBtn.classList.remove("waiting"),e.isPlaying=!0,e.isWaiting=!1,cdImg.style.animationPlayState="running",setLocalStorageTimerId=setInterval((()=>{setLocalStorage("current-time",Math.ceil(audio.currentTime)),console.log("set time")}),3e3)},audio.onpause=()=>{console.log("pause"),handleOnPause(e)},audio.onerror=()=>{if(!e.songs.length)return handleOnPause();e.nextSong()},audio.ontimeupdate=handleTimeUpdate,audio.onended=function(){return e.isRepeat?audio.play():e.isRandom?e.randomSong():void e.nextSong()},audio.onseeked=()=>{clearInterval(setLocalStorageTimerId)},audio.addEventListener("loadedmetadata",(n=>{durationEle.innerText=formatTime(n.target.duration),e.isFirstLoadSong?e.isFirstLoadSong=!1:e.endOfList?e.endOfList=!1:e.isPlaying||(handleScrollActiveSongIntoView(),t(),audio.play())}))}