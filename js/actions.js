import{collection as t,getDocs as n,query as s,where as e}from"https://www.gstatic.com/firebasejs/10.4.0/firebase-firestore.js";import{songListSelect as o,songlist as i,timeSliderCurrent as r,timeSliderHolder as c,currentTimeEle as a,durationEle as l,volumeSliderCurrent as d,switchBtn as u,randomBtn as h,rePeatBtn as g,player as m}from"./constant.js";import{db as p}from"./firebase/config.js";import{onPauseHandle as f}from"./handleEvent.js";import{getLocalStorageItem as x,setLocalStorage as v}from"./utils/appHelper.js";const y=document.querySelector.bind(document),S=document.querySelectorAll.bind(document),I=y(".audio");let w=[];export const getActuallySongs=function(){console.log("get actually songs"),w="playlist"===this.song_in?this.playlistSongs:this.songs};export const fetchSongs=async function(){const o=t(p,"songs"),i=s(o,e("by","==","huudat01234560@gmail.com")),r=t(p,"playlist"),c=s(r,e("by","==","huudat01234560@gmail.com"));try{const t=await n(i),s=await n(c);if(t.docs.length){const n=t.docs.map((t=>t.data()));this.songs=n}else this.songs=temporarySongs;if(s.docs.length){const t=s.docs.map((t=>t.data()));this.playlists=t}}catch(t){console.log(t)}};export const sortSongs=function(){var t=this.songs.sort(((t,n)=>t.name>n.name));this.songs=t};export const render=function(){let t="";if(!w.length)return t+="<h1>Error when render songs</h1>";w.forEach((n=>{t+=`<li class="song-item ${this.currentSong.id===n.id?"active":""}" id="${n.id}">\n            <div class="song-frame">\n              <div class="song-img" style="background-image: url(${n.image_url||"https://placehold.co/100"})" >\n              </div>\n            </div>\n            <div class="song-info">\n              <h2>${n.name}</h2>\n              <h4>${n.singer}</h4>\n            </div>\n            <div class="song-detail">\n              <i class="fa-solid fa-ellipsis-vertical"></i>\n            </div>\n          </li>`})),i.innerHTML=t};export const renderMenu=function(){let t='<option value="">Default</option>';this?.playlists?.length&&(this.playlists.forEach((n=>t+=`<option value='${n.name}'>${n.name}</option>`)),o.innerHTML=t)};export const nextSong=function(){let t=this.currentIndex+1;t<=w.length-1?this.currentIndex=t:(this.currentIndex=0,this.endOfList=!0),this.loadCurrentSong()};export const prevSong=function(){this.currentIndex=this.currentIndex>0?this.currentIndex-1:w.length-1,this.loadCurrentSong()};export const randomSong=function(){let t=0;do{t=Math.floor(w.length*Math.random())}while(t===this.currentIndex);this.currentIndex=t,this.loadCurrentSong()};const b=t=>{const n=y(".dashboard h4"),s=y(".dashboard h2"),e=y(".cd-img"),o=y(".title-wrapper h2");"unset"!==s.style.transition&&(o.style.transition="unset",o.style.transform="translateX(0px)"),n.innerText=t.singer,s.innerText=t.name,e.style.backgroundImage=`url(${t.image_url||"https://placehold.co/300"})`,I.src=t.song_url,document.title=t.name};export const loadCurrentSong=function(){if(f(this),r.style.width="0%",c.style.transform="translate(100%, -50%)",a.innerText="00:00",l.innerText="/ 00:00",!w)return console.log("can't load current song");const t=w[this.currentIndex];if(!t)return console.log("can't load current song");v("current",t),this.currentSong=t,b(t),function(t){const n=S(".song-item");for(var s of n)s.classList.contains("active")&&s.classList.remove("active");const e=n[t.currentIndex];e&&e.classList.add("active")}(this)};export const loadConfig=function(){this.isRepeat=x("isRepeat",!1),this.isDark=x("isDark",!1);const t=x("current",null);if(this.currentSong=t,window.innerWidth>550){const t=x("volume",1);d.style.width=100*t+"%",this.volume=t,I.volume=t}h.classList.toggle("active",!!this.isRandom),g.classList.toggle("active",!!this.isRepeat),m.classList.toggle("dark",!!this.isDark),u.classList.toggle("dark",!!this.isDark)};export const loadCurrentSongFromLocalStorage=function(){b(this.currentSong)};export const updateCurrentIndex=function(){if(!w||!this.currentSong)return console.log("can't update current index");const t=w.findIndex((t=>t.id===this.currentSong.id));-1!==t&&(console.log("check current index",t),this.currentIndex=t)};